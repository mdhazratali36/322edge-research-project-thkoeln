
---
- name: Setup Kubernetes Worker Node
  hosts: worker_nodes
  become: yes
  tasks:

    - name: Disable swap
      command: swapoff -a

    - name: Comment out swap entry in fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^.*swap.*$'
        line: '# \0'
        state: present

    - name: Load necessary kernel modules
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Load overlay module
      modprobe:
        name: overlay

    - name: Load br_netfilter module
      modprobe:
        name: br_netfilter

    - name: Set up required sysctl parameters
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Apply sysctl settings
      command: sysctl --system

    - name: Update package list
      apt:
        update_cache: yes

    - name: Install necessary packages
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Set up Docker stable repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Generate containerd default configuration
      command: containerd config default
      register: containerd_default_config

    - name: Write containerd configuration
      copy:
        content: "{{ containerd_default_config.stdout }}"
        dest: /etc/containerd/config.toml

    - name: Set SystemdCgroup to true
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^SystemdCgroup = false'
        line: 'SystemdCgroup = true'

    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Add Kubernetes' official GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        state: present
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Set up Kubernetes repository
      apt_repository:
        repo: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /'
        state: present
        filename: kubernetes

    - name: Install kubelet, kubeadm, and kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Mark kubelet on hold
      command: apt-mark hold kubelet

    - name: Mark kubeadm on hold
      command: apt-mark hold kubeadm

    - name: Mark kubectl on hold
      command: apt-mark hold kubectl
    
    - name: Retrieve kubeadm join command
      delegate_to: 10.32.198.173  # Replace with your actual master node IP
      shell: kubeadm token create --print-join-command
      register: join_command
      run_once: yes


    - name: Join worker node to the Kubernetes cluster
      shell: "{{ join_command.stdout }}"
      ignore_errors: yes
